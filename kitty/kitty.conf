# Visual Configs 
hide_window_decorations yes
font_size 13.0
background_opacity 0.89
cursor_shape block

# This Layout lets Us Use Vertical and Horizontal Splits 
enabled_layouts splits:split_axis=horizontal

# Tabs and Windows w/cmd(alt), just like our linux config
# Tabs
map alt+c new_tab

map alt+j previous_tab
map alt+; next_tab

map alt+shift+j move_tab_backward
map alt+shift+; move_tab_forward

map alt+x close_window_with_confirmation ignore-shell
map alt+, set_tab_title

# Windows
map alt+v launch --location=vsplit
map alt+s launch --location=hsplit

map alt+left neighboring_window left
map alt+right neighboring_window right
map alt+up neighboring_window top
map alt+down neighboring_window bottom

# Full Screen 
map alt+f toggle_fullscreen

# Tab-bar styling
tab_bar_edge top
tab_bar_min_tabs 1
tab_bar_style powerline
tab_title_template {title}{' :{}:'.format(num_windows) if num_windows > 1 else ''}

# # Map binding to move keys in nvim, mac does not have alt
# map alt+j send_key alt+j
# map alt+k send_key alt+k

# Better copy and paste 
map ctrl+c copy_or_interrupt
map ctrl+x paste

# Hide mouse after X seconds
mouse_hide_wait 0.5

# BEGIN_KITTY_FONTS
font_family      family="Source Code Pro"
bold_font        auto
italic_font      auto
bold_italic_font auto
# END_KITTY_FONTS

# Change Font Size
map alt+equal change_font_size all +1.0
map alt+plus change_font_size all +1.0
map alt+minus change_font_size all -1.0
map alt+kp_subtract change_font_size all -1.0


map ctrl+k kitten pass_keys.py bottom ctrl+k
map ctrl+l kitten pass_keys.py top    ctrl+l
map ctrl+j kitten pass_keys.py left   ctrl+j
map ctrl+; kitten pass_keys.py right  ctrl+;


allow_remote_control yes
listen_on unix:@mykitty
